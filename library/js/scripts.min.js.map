{"version":3,"sources":["scripts.js"],"names":[],"mappingsfile":"scripts.min.js","sourcesContent":["/*\n * Bones Scripts File\n * Author: Eddie Machado\n *\n * This file should contain any js scripts you want to add to the site.\n * Instead of calling it in the header or throwing it inside wp_head()\n * this file will be called automatically in the footer so as not to\n * slow the page load.\n *\n * There are a lot of example functions and tools in here. If you don't\n * need any of it, just remove it. They are meant to be helpers and are\n * not required. It's your world baby, you can do whatever you want.\n*/\n\n\n/*\n * Get Viewport Dimensions\n * returns object with viewport dimensions to match css in width and height properties\n * ( source: http://andylangton.co.uk/blog/development/get-viewport-size-width-and-height-javascript )\n*/\nfunction updateViewportDimensions() {\n\tvar w=window,d=document,e=d.documentElement,g=d.getElementsByTagName('body')[0],x=w.innerWidth||e.clientWidth||g.clientWidth,y=w.innerHeight||e.clientHeight||g.clientHeight;\n\treturn { width:x,height:y };\n}\n// setting the viewport width\nvar viewport = updateViewportDimensions();\n\n\n/*\n * Throttle Resize-triggered Events\n * Wrap your actions in this function to throttle the frequency of firing them off, for better performance, esp. on mobile.\n * ( source: http://stackoverflow.com/questions/2854407/javascript-jquery-window-resize-how-to-fire-after-the-resize-is-completed )\n*/\nvar waitForFinalEvent = (function () {\n\tvar timers = {};\n\treturn function (callback, ms, uniqueId) {\n\t\tif (!uniqueId) { uniqueId = \"Don't call this twice without a uniqueId\"; }\n\t\tif (timers[uniqueId]) { clearTimeout (timers[uniqueId]); }\n\t\ttimers[uniqueId] = setTimeout(callback, ms);\n\t};\n})();\n\n// how long to wait before deciding the resize has stopped, in ms. Around 50-100 should work ok.\nvar timeToWaitForLast = 100;\n\n\n/*\n * Here's an example so you can see how we're using the above function\n *\n * This is commented out so it won't work, but you can copy it and\n * remove the comments.\n *\n *\n *\n * If we want to only do it on a certain page, we can setup checks so we do it\n * as efficient as possible.\n *\n * if( typeof is_home === \"undefined\" ) var is_home = $('body').hasClass('home');\n *\n * This once checks to see if you're on the home page based on the body class\n * We can then use that check to perform actions on the home page only\n *\n * When the window is resized, we perform this function\n * $(window).resize(function () {\n *\n *    // if we're on the home page, we wait the set amount (in function above) then fire the function\n *    if( is_home ) { waitForFinalEvent( function() {\n *\n *\t// update the viewport, in case the window size has changed\n *\tviewport = updateViewportDimensions();\n *\n *      // if we're above or equal to 768 fire this off\n *      if( viewport.width >= 768 ) {\n *        console.log('On home page and window sized to 768 width or more.');\n *      } else {\n *        // otherwise, let's do this instead\n *        console.log('Not on home page, or window sized to less than 768.');\n *      }\n *\n *    }, timeToWaitForLast, \"your-function-identifier-string\"); }\n * });\n *\n * Pretty cool huh? You can create functions like this to conditionally load\n * content and other stuff dependent on the viewport.\n * Remember that mobile devices and javascript aren't the best of friends.\n * Keep it light and always make sure the larger viewports are doing the heavy lifting.\n *\n*/\n\n/*\n * We're going to swap out the gravatars.\n * In the functions.php file, you can see we're not loading the gravatar\n * images on mobile to save bandwidth. Once we hit an acceptable viewport\n * then we can swap out those images since they are located in a data attribute.\n*/\nfunction loadGravatars() {\n  // set the viewport using the function above\n  viewport = updateViewportDimensions();\n  // if the viewport is tablet or larger, we load in the gravatars\n  if (viewport.width >= 768) {\n  jQuery('.comment img[data-gravatar]').each(function(){\n    jQuery(this).attr('src',jQuery(this).attr('data-gravatar'));\n  });\n\t}\n} // end function\n\n\n/*\n * Put all your regular jQuery in here.\n*/\njQuery(document).ready(function($) {\n\n  /*\n   * Let's fire off the gravatar function\n   * You can remove this if you don't need it\n  */\n  loadGravatars();\n\n\n}); /* end of as page load scripts */\n"],"sourceRoot":"/source/"}